Meteor.methods({

  'checkUserHasPermission': function(username, permissionName) {
    var user = Meteor.users.findOne({
      username: username
    });

    return Roles.userIsInRole(user, permissionName);
  },

  'getUserByEmail': function(email) {
    return Meteor.users.findOne({
      emails: {
        $elemMatch: {
          address: email
        }
      }
    });
  },

  'createTestCompany': function() {
    var id = Companies.insert({
      name: 'test company',
      address: 'test address',
      city: 'test city',
      country: 'test country',
      postcode: 'test postcode',
      website: 'http://www.test-company.test',
      createdBy: Meteor.userId()
    });

    return id;
  },

  'createTestContact': function() {
    var data = "";
    Contacts.insert({
      title: 'Dr',
      forename: 'test forename',
      surname: 'test surname',
      address: 'Cowley Road',
      city: 'Cambridge',
      postcode: 'CB4 0WS',
      country: 'England',
      createdBy: Meteor.userId()
    }, function(err, id) {
      if (err) {
        data = err;
      } else {
        data = id;
      }
    });
    return data;
  },

  'createTestCustomField': function() {
    var cfName = 'velocity';
    var cfValue = 'cucumber';
    var cfType = 'text';
    var cfMaster = {};
    var company = Companies.findOne({
      name: 'test company'
    });

    var settings = {
      "dataValue": cfValue,
      "dataType": cfType
    }

    cfMaster[cfName] = settings;

    Companies.update(company._id, {
      $set: {
        customFields: cfMaster
      }
    });
  },

  'createTestProduct': function() {
    var data = "";
    Products.remove({});
    Products.insert({
      name: 'test product',
      description: 'test description',
      createdBy: Meteor.userId()
    }, function(err, id) {
      if (err) {
        data = err;
      } else {
        data = id;
      }
    });
    return data;
  },

  'getProductByName': function(name) {
    return Products.findOne({
      name: name
    });
  }});